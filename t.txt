#include <Keypad.h>

const byte ROWS = 4; // número de linhas do teclado
const byte COLS = 4; // número de colunas do teclado

char keys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};

byte rowPins[ROWS] = {9, 8, 7, 6}; // pino de cada linha
byte colPins[COLS] = {5, 4, 3, 2}; // pino de cada coluna

Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

const int ledPin1 = 13; // Pino do primeiro LED
const int ledPin2 = 12; // Pino do segundo LED
const int ledPin3 = 11; // Pino do terceiro LED

String sequencia = ""; // Sequência a ser digitada

// Referências para cada LED
String referencias1[] = {"24016"};
String referencias2[] = {"24030"};
String referencias3[] = {"24700"};

// Contadores para alternar as referências
int contador1 = 0; // Contador para o primeiro LED
int contador2 = 0; // Contador para o segundo LED
int contador3 = 0; // Contador para o terceiro LED

void setup() {
  Serial.begin(9600);
  pinMode(ledPin1, OUTPUT);
  pinMode(ledPin2, OUTPUT);
  pinMode(ledPin3, OUTPUT);
  reset(); // Chama a função de reset no início
}

void loop() {
  char tecla = keypad.getKey(); // lê a tecla pressionada

  if (tecla != NO_KEY) { // verifica se alguma tecla foi pressionada
    Serial.println(tecla); // exibe a tecla no Monitor Serial
    
    // Verifica se a tecla é o asterisco (*)
    if (tecla == '*') {
      reset(); // Chama a função de reset
    } else {
      sequencia += tecla; // adiciona a tecla à sequência
      
      if (sequencia.length() == referencias1[contador1].length()) {
        // Sequência completa
  
        if (sequencia == referencias1[contador1]) {
          // Sequência correta para o primeiro LED
          digitalWrite(13, HIGH); // Acende o primeiro LED
          // Resto do código...
          contador1++; // Incrementa o contador do primeiro LED
          if (contador1 >= (sizeof(referencias1) / sizeof(referencias1[0]))) {
            contador1 = 0; // Reinicia o contador do primeiro LED
          }
          sequencia = ""; // Reinicia a sequência
        } else if (sequencia == referencias2[contador2]) {
          // Sequência correta para o segundo LED
          digitalWrite(12, HIGH); // Acende o segundo LED
          // Resto do código...
          contador2++; // Incrementa o contador do segundo LED
          if (contador2 >= (sizeof(referencias2) / sizeof(referencias2[0]))) {
            contador2 = 0; // Reinicia o contador do segundo LED
          }
          sequencia = ""; // Reinicia a sequência
        } else if (sequencia == referencias3[contador3]) {
          // Sequência correta para o terceiro LED
          digitalWrite(11, HIGH); // Acende o terceiro LED
          // Resto do código...
          contador3++; // Incrementa o contador do terceiro LED
          if (contador3 >= (sizeof(referencias3) / sizeof(referencias3[0]))) {
            contador3 = 0; // Reinicia o contador do terceiro LED
          }
          sequencia = ""; // Reinicia a sequência
        } else {
          // Sequência incorreta
          sequencia = ""; // Reinicia a sequência
        }
      }
    }
  }

  delay(100); // aguarda um curto período antes de ler a próxima tecla
}

void reset() {
  contador1 = 0; // Reinicia o contador do primeiro LED
  contador2 = 0; // Reinicia o contador do segundo LED
  contador3 = 0; // Reinicia o contador do terceiro LED
  
  digitalWrite(13, LOW); // Apaga o primeiro LED
  digitalWrite(12, LOW); // Apaga o segundo LED
  digitalWrite(11, LOW); // Apaga o terceiro LED
  
  sequencia = ""; // Reinicia a sequência
}